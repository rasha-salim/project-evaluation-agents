---
# Tasks configuration for Project Evolution System
# Defines the specific tasks each agent performs and their workflow

tasks:
  # Feedback Analyst Tasks
  analyze_feedback:
    name: "Analyze User Feedback"
    description: "Process and categorize user feedback data to identify patterns and pain points"
    agent: "feedback_analyst"
    inputs:
      - name: "feedback_data"
        description: "CSV file containing user feedback, support tickets, and usage logs"
        type: "file"
        required: true
    outputs:
      - name: "feedback_analysis_report"
        description: "Structured report of categorized insights and pain points"
        type: "json"
    expected_output_schema:
      type: "object"
      properties:
        categories:
          type: "array"
          items:
            type: "object"
            properties:
              category: 
                type: "string"
                description: "Category of feedback (UI/UX, Performance, Features, etc.)"
              count: 
                type: "integer"
                description: "Number of feedback items in this category"
              severity: 
                type: "number"
                description: "Average severity score (1-5)"
              insights: 
                type: "array"
                items:
                  type: "string"
                description: "Key insights extracted from feedback"
              examples:
                type: "array"
                items:
                  type: "string"
                description: "Representative examples of feedback in this category"

  # Feature Strategist Tasks
  generate_feature_proposals:
    name: "Generate Feature Proposals"
    description: "Create feature proposals based on feedback analysis"
    agent: "feature_strategist"
    inputs:
      - name: "feedback_analysis_report"
        description: "Structured report from the Feedback Analyst"
        type: "json"
        required: true
    outputs:
      - name: "feature_proposals"
        description: "Prioritized list of feature proposals with impact scores"
        type: "json"
    expected_output_schema:
      type: "object"
      properties:
        features:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "string"
                description: "Unique identifier for the feature"
              title:
                type: "string"
                description: "Short descriptive title"
              description:
                type: "string"
                description: "Detailed description of the feature"
              addressing_categories:
                type: "array"
                items:
                  type: "string"
                description: "Categories of feedback this feature addresses"
              impact_score:
                type: "number"
                description: "Estimated impact score (1-100)"
              priority:
                type: "string"
                enum: ["Critical", "High", "Medium", "Low"]
              rationale:
                type: "string"
                description: "Reasoning behind this feature proposal"

  # Technical Feasibility Tasks
  evaluate_feasibility:
    name: "Evaluate Technical Feasibility"
    description: "Assess technical complexity and implementation requirements"
    agent: "technical_feasibility"
    inputs:
      - name: "feature_proposals"
        description: "Prioritized feature proposals from the Feature Strategist"
        type: "json"
        required: true
    outputs:
      - name: "feasibility_assessment"
        description: "Technical assessment with feasibility scores and implementation estimates"
        type: "json"
    expected_output_schema:
      type: "object"
      properties:
        assessments:
          type: "array"
          items:
            type: "object"
            properties:
              feature_id:
                type: "string"
                description: "ID of the feature being assessed"
              feasibility_score:
                type: "number"
                description: "Score from 0-100 indicating technical feasibility"
              complexity:
                type: "string"
                enum: ["Simple", "Moderate", "Complex", "Very Complex"]
              effort_estimate:
                type: "object"
                properties:
                  story_points:
                    type: "number"
                  developer_days:
                    type: "number"
              dependencies:
                type: "array"
                items:
                  type: "string"
                description: "Technical dependencies required"
              risks:
                type: "array"
                items:
                  type: "object"
                  properties:
                    description:
                      type: "string"
                    severity:
                      type: "string"
                      enum: ["Low", "Medium", "High"]
              technical_notes:
                type: "string"
                description: "Additional technical considerations"

  # Sprint Planner Tasks
  create_sprint_plan:
    name: "Create Sprint Plan"
    description: "Develop actionable sprint plans based on feasible features"
    agent: "sprint_planner"
    inputs:
      - name: "feasibility_assessment"
        description: "Technical assessment from the Technical Feasibility Agent"
        type: "json"
        required: true
      - name: "feature_proposals"
        description: "Original feature proposals for reference"
        type: "json"
        required: true
    outputs:
      - name: "sprint_plan"
        description: "2-week sprint plan with story points and task breakdown"
        type: "json"
    expected_output_schema:
      type: "object"
      properties:
        sprint_name:
          type: "string"
        start_date:
          type: "string"
          format: "date"
        end_date:
          type: "string"
          format: "date"
        capacity:
          type: "number"
          description: "Total story points capacity for the sprint"
        features:
          type: "array"
          items:
            type: "object"
            properties:
              feature_id:
                type: "string"
              title:
                type: "string"
              priority:
                type: "string"
              story_points:
                type: "number"
              tasks:
                type: "array"
                items:
                  type: "object"
                  properties:
                    description:
                      type: "string"
                    assignee_role:
                      type: "string"
                    estimate_days:
                      type: "number"
        total_story_points:
          type: "number"
        capacity_utilization:
          type: "number"
          description: "Percentage of capacity utilized"

  # Stakeholder Communicator Tasks
  generate_stakeholder_update:
    name: "Generate Stakeholder Update"
    description: "Create executive summaries and decision matrices"
    agent: "stakeholder_communicator"
    inputs:
      - name: "feedback_analysis_report"
        description: "Feedback analysis from the Feedback Analyst"
        type: "json"
        required: true
      - name: "feature_proposals"
        description: "Feature proposals from the Feature Strategist"
        type: "json"
        required: true
      - name: "feasibility_assessment"
        description: "Technical assessment from the Technical Feasibility Agent"
        type: "json"
        required: true
      - name: "sprint_plan"
        description: "Sprint plan from the Sprint Planner"
        type: "json"
        required: true
    outputs:
      - name: "stakeholder_update"
        description: "Executive summary and decision matrix for stakeholders"
        type: "json"
    expected_output_schema:
      type: "object"
      properties:
        executive_summary:
          type: "string"
          description: "High-level summary of the continuous improvement cycle"
        key_insights:
          type: "array"
          items:
            type: "string"
        decision_matrix:
          type: "array"
          items:
            type: "object"
            properties:
              feature_id:
                type: "string"
              title:
                type: "string"
              business_impact:
                type: "string"
                enum: ["Low", "Medium", "High", "Critical"]
              technical_feasibility:
                type: "string"
                enum: ["Low", "Medium", "High"]
              resource_requirement:
                type: "string"
              recommendation:
                type: "string"
                enum: ["Approve", "Consider", "Defer", "Reject"]
              rationale:
                type: "string"
        next_steps:
          type: "array"
          items:
            type: "string"

# Workflow Configurations
workflows:
  sequential:
    name: "Sequential Orchestration"
    description: "Process flows from Feedback to Strategy to Feasibility to Planning to Communication"
    steps:
      - task: "analyze_feedback"
      - task: "generate_feature_proposals"
        depends_on: ["analyze_feedback"]
      - task: "evaluate_feasibility"
        depends_on: ["generate_feature_proposals"]
      - task: "create_sprint_plan"
        depends_on: ["evaluate_feasibility"]
      - task: "generate_stakeholder_update"
        depends_on: ["create_sprint_plan"]
  
  parallel:
    name: "Parallel Processing"
    description: "Run Feedback, Technical, and Market agents simultaneously"
    steps:
      - task: "analyze_feedback"
      - task: "generate_feature_proposals"
        depends_on: ["analyze_feedback"]
      - task: "evaluate_feasibility"
        depends_on: ["generate_feature_proposals"]
        parallel: true
      - task: "create_sprint_plan"
        depends_on: ["evaluate_feasibility"]
      - task: "generate_stakeholder_update"
        depends_on: ["create_sprint_plan"]
  
  autonomous:
    name: "Autonomous Iteration"
    description: "Enables automatic iteration based on predefined conditions"
    steps:
      - task: "analyze_feedback"
      - task: "generate_feature_proposals"
        depends_on: ["analyze_feedback"]
      - task: "evaluate_feasibility"
        depends_on: ["generate_feature_proposals"]
        iteration:
          condition: "feasibility_score < 50"
          max_iterations: 3
          trigger: "generate_feature_proposals"
      - task: "create_sprint_plan"
        depends_on: ["evaluate_feasibility"]
        iteration:
          condition: "capacity_utilization > 100"
          max_iterations: 3
          trigger: "create_sprint_plan"
      - task: "generate_stakeholder_update"
        depends_on: ["create_sprint_plan"]
